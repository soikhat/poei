<?php

use Drupal\user\UserInterface;
use Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Form\FormStateInterface;

  function hello_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
    switch ($route_name) {

      // Main module help for the block module.
      case 'help.page.hello':
        return '<p>' . t('here is the hello module', [
            ':blocks' => \Drupal::url('block.admin_display'),
          ]) . '</p>';

      // Help for another path in the block module.
      case 'block.admin_display':
        return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.
           Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis.
            Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
    }
  }


function hello_cron(){

    $purge_days_number =\Drupal::config('hello.settings')->get('purge_days_number');
    drupal_set_message('hello cron');
    if($purge_days_number !='0'){
        $nombre_suppression = \Drupal::database()
          ->delete('hello_user_statistics')
          ->condition('time', $purge_days_number*(24*3600), '<=')
          ->execute();

    }
    \Drupal::messenger()
    ->addMessage(t('@nombre_suppression records hase been deleted.',['@nombre_suppression'=> $purge_days_number]));

}

/**
 * Implements hook_user_login().
 */

function hello_user_login(UserInterface $account) {


  $account-> getAccountName();
  $account_roles = $account->getRoles();
  $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_roles');
  $diff = array_intersect($user_statistics_roles,$account_roles);
  if($diff){

    \Drupal::messenger()->addMessage(t('welcome dear %name!',['%name'=> $account->getAccountName()]));

    \Drupal::database()->insert('hello_user_statistics')
      ->fields([
        'uid'=> $account->id(),
        'time'=>REQUEST_TIME,
        'action'=>1,
      ])->execute();
  }


}
function hello_user_logout(AccountInterface $account) {

  $account_roles = $account->getRoles();
  $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_roles');
  $diff = array_intersect($user_statistics_roles,$account_roles);
  if($diff){

    \Drupal::database()->insert('hello_user_statistics')
      ->fields([
        'uid' => $account
          ->id(),
        'time' => REQUEST_TIME,
        'action' => 0,
      ])
      ->execute();
  }

}

function hello_user_delete( $account) {

  \Drupal::database()->delete('hello_user_statistics')

    ->condition('uid', $account
      ->id())
    ->execute();
}

function hello_theme($existing,$type,$theme,$path){

  return array(
    'hello'=>array (
      'template'=>'hello-user-connexion',
      'variables'=>array('count'=> NULL,
                          'user' => NULL,
        ),
    ),
  );


}
function hello_form_user_admin_settings_alter(&$form ,\Drupal\Core\Form\FormStateInterface $form_state){
  $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_roles');
  $roles = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
  unset($roles['anonymous']);
  $option = [];

  foreach($roles as $role){
    $option[$role ->id()] = $role->label();

  }

  $form['user_role']= array(
    '#type'=>'details',
    '#title'=>'ROLE FOR WHICH TO COLLECT ACTIVITY STATISTICS',
    '#open'=>TRUE,

  );
  $form['user_role']['role']= array(
    '#type'=>'checkboxes',
    '#options'=>$option,
    '#default_value'=>$user_statistics_roles,
  );
  $form['#submit'][]='hello_form_user_admin_settings_submit';
  function hello_form_user_admin_settings_submit(array &$form, FormStateInterface $form_state){

    $config = \Drupal::configFactory()->getEditable('hello.settings');
    $config->set('user_statistics_roles',$form_state->getValue('role'))->save();
  }
}